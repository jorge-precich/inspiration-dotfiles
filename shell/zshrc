# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

export KEYTIMEOUT=1

source $HOME/.dotfiles/shell/shell_exports # Shell Exports

source $HOME/.dotfiles/git/git_aliases # Git Aliases
source $HOME/.dotfiles/shell/shell_aliases # Shell Aliases

if [[ -s "$HOME/.zshrc.local" ]]; then
  source $HOME/.zshrc.local # Customizations
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

###-tns-completion-start-###
if [ -f /Users/cesargomez/.tnsrc ]; then
    source /Users/cesargomez/.tnsrc
fi
###-tns-completion-end-###

###-newrelic-completion-start-###
if [ -f /Users/ysim/.newrelicrc ]; then
    source /Users/ysim/.newrelicrc
fi
###-newrelic-completion-end-###

fpath=(~/.stripe $fpath)
autoload -Uz compinit && compinit -i

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc
